{"ast":null,"code":"var _jsxFileName = \"C:\\\\OSPanel\\\\domains\\\\react-chat\\\\client\\\\src\\\\index.js\";\n// Импорт библиотеки React\nimport React from 'react';\n\n// Импорт функции createRoot из 'react-dom/client', которая используется для создания корневого контейнера\nimport { createRoot } from 'react-dom/client';\n\n// Импорт компонента BrowserRouter из 'react-router-dom' и переименование его в Router для удобства\nimport { BrowserRouter as Router } from 'react-router-dom';\n\n// Импорт главного приложения App из файла './components/App'\nimport App from './components/App';\n\n// Импорт стилей CSS\nimport \"./styles/main.css\";\n\n// Получение элемента с идентификатором 'root'. Это место, в которое будет загружено наше React-приложение.\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst container = document.getElementById('root');\n// С помощью функции createRoot создаем корневой контейнер (который является частью нового API React - Concurrent Mode)\nconst root = createRoot(container);\n\n// Запускаем рендеринг корневого компонента (Router, который оборачивает App) в корневой контейнер. \n// Это аналогично ReactDOM.render(), но используется для Concurrent Mode.\nroot.render( /*#__PURE__*/_jsxDEV(Router, {\n  children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 24,\n  columnNumber: 1\n}, this));\n\n// Данный код инициализирует и рендерит главный компонент приложения App. \n// Он также включает в себя маршрутизацию при помощи react-router-dom.\n// Здесь BrowserRouter используется для предоставления возможности маршрутизации в приложении. \n// Это позволяет создавать навигацию по различным страницам в одностраничном приложении. \n// Компонент App обернут BrowserRouter, поэтому все дочерние компоненты App будут иметь доступ к функциональности маршрутизации.","map":{"version":3,"names":["React","createRoot","BrowserRouter","Router","App","jsxDEV","_jsxDEV","container","document","getElementById","root","render","children","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["C:/OSPanel/domains/react-chat/client/src/index.js"],"sourcesContent":["// Импорт библиотеки React\r\nimport React from 'react';\r\n\r\n// Импорт функции createRoot из 'react-dom/client', которая используется для создания корневого контейнера\r\nimport { createRoot } from 'react-dom/client';\r\n\r\n// Импорт компонента BrowserRouter из 'react-router-dom' и переименование его в Router для удобства\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\n\r\n// Импорт главного приложения App из файла './components/App'\r\nimport App from './components/App';\r\n\r\n// Импорт стилей CSS\r\nimport \"./styles/main.css\";\r\n\r\n// Получение элемента с идентификатором 'root'. Это место, в которое будет загружено наше React-приложение.\r\nconst container = document.getElementById('root');\r\n// С помощью функции createRoot создаем корневой контейнер (который является частью нового API React - Concurrent Mode)\r\nconst root = createRoot(container);\r\n\r\n// Запускаем рендеринг корневого компонента (Router, который оборачивает App) в корневой контейнер. \r\n// Это аналогично ReactDOM.render(), но используется для Concurrent Mode.\r\nroot.render(\r\n<Router>\r\n    <App />\r\n</Router>\r\n);\r\n\r\n// Данный код инициализирует и рендерит главный компонент приложения App. \r\n// Он также включает в себя маршрутизацию при помощи react-router-dom.\r\n// Здесь BrowserRouter используется для предоставления возможности маршрутизации в приложении. \r\n// Это позволяет создавать навигацию по различным страницам в одностраничном приложении. \r\n// Компонент App обернут BrowserRouter, поэтому все дочерние компоненты App будут иметь доступ к функциональности маршрутизации."],"mappings":";AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,SAASC,UAAU,QAAQ,kBAAkB;;AAE7C;AACA,SAASC,aAAa,IAAIC,MAAM,QAAQ,kBAAkB;;AAE1D;AACA,OAAOC,GAAG,MAAM,kBAAkB;;AAElC;AACA,OAAO,mBAAmB;;AAE1B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,SAAS,GAAGC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC;AACjD;AACA,MAAMC,IAAI,GAAGT,UAAU,CAACM,SAAS,CAAC;;AAElC;AACA;AACAG,IAAI,CAACC,MAAM,eACXL,OAAA,CAACH,MAAM;EAAAS,QAAA,eACHN,OAAA,CAACF,GAAG;IAAAS,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE;AAAC;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OACH,CACR,CAAC;;AAED;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}